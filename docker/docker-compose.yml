services:
  create_balance:
    container_name: create_balance
    image: romelabs/rome-apps:${CLI_TAG:-latest}
    environment:
      SOLANA_RPC: ${SOLANA_RPC}
      CHAIN_ID: ${CHAIN_ID}
      SERVICE_NAME: cli-deploy.sh
      COMMAND: create-balance
      ADDRESS: ${GENESIS_ADDRESS}
      BALANCE: ${GENESIS_BALANCE}
      PROGRAM_ID: ${PROGRAM_ID}
      KEYPAIR: /opt/rollup-owner-keypair.json
    volumes:
      - ./keys/rollup-owner-keypair.json:/opt/rollup-owner-keypair.json
    networks:
      - net

  postgres_rome:
    container_name: postgres_rome
    image: postgres:15
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: test_rollup
      POSTGRES_USER: hercules
      POSTGRES_PASSWORD: qwerty123
    hostname: postgres_rome
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
    expose:
      - 5432
    networks:
      - net

  apply_migrations:
    container_name: apply_migrations
    image: romelabs/rome-apps:${HERCULES_TAG:-latest}
    environment:
      SERVICE_NAME: apply_migrations
      DATABASE_URL: "postgres://hercules:qwerty123@postgres_rome/test_rollup"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net

  proxy:
    container_name: proxy
    image: romelabs/rome-apps:${PROXY_TAG:-latest}
    hostname: proxy
    environment:
      SERVICE_NAME: proxy
      PROXY_CONFIG: /opt/proxy-config.yml
    volumes:
      - ./cfg/proxy-config.yml:/opt/proxy-config.yml
      - ./keys/proxy-sender.json:/opt/proxy-sender.json
      - ./keys/proxy-sender-2.json:/opt/proxy-sender-2.json
      - ./keys/proxy-sender-3.json:/opt/proxy-sender-3.json
    ports:
      - 9090:9090
    expose:
      - "9090"
    networks:
      - net

  geth:
    container_name: geth
    image: romelabs/rollup-op-geth:${GETH_TAG:-latest}
    hostname: geth
    environment:
      CHAIN_ID: ${CHAIN_ID}
      GENESIS_ADDRESS: ${GENESIS_ADDRESS}
      GENESIS_BALANCE: ${GENESIS_BALANCE}
      GENESIS_PRIVATE_KEY: ${GENESIS_PRIVATE_KEY}
      GETH_HOST: ${GETH_HOST}
      JWT_SECRET: ${JWT_SECRET}
      ROME_GASOMETER_URL: ${GASOMETER_HOST}
      GETH_BASE_DATA_DIR: /opt/geth
    volumes:
      - ./geth:/opt/geth
      # - /etc/letsencrypt/live/${DOMAIN}/fullchain.pem:/etc/nginx/ssl/selfsigned.crt
      # - /etc/letsencrypt/live/${DOMAIN}/privkey.pem:/etc/nginx/ssl/selfsigned.key
    ports:
      - 443:443
      - 8545:8545
      - 8546:8546
      - 8551:8551
    networks:
      - net

  faucet:
    container_name: faucet
    image: romelabs/rome-faucet:${FAUCET_TAG:-latest}
    hostname: faucet
    environment:
      HTTP_ADDR:  ${HTTP_ADDR}
      AIRDROP_TITLE: ${AIRDROP_TITLE}
      RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
      RECAPTCHA_SITE_SECRET: ${RECAPTCHA_SITE_SECRET}
      AIRDROP_ADDRESS: ${AIRDROP_ADDRESS}
      AIRDROP_PRIVATE_KEY: ${AIRDROP_PRIVATE_KEY}
    # volumes:
      # - /etc/letsencrypt/live/${DOMAIN}/fullchain.pem:/etc/nginx/ssl/selfsigned.crt
      # - /etc/letsencrypt/live/${DOMAIN}/privkey.pem:/etc/nginx/ssl/selfsigned.key
    ports:
      - 2000:443
      - 3000:3000
    networks:
      - net

  hercules:
    container_name: hercules
    image: romelabs/rome-apps:${HERCULES_TAG:-latest}
    hostname: hercules
    environment:
      SERVICE_NAME: hercules
      HERCULES_CONFIG: /opt/hercules-config.yml
    volumes:
      - ./cfg/hercules-config.yml:/opt/hercules-config.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8000:8000
    networks:
      - net

  rhea:
    container_name: rhea
    image: romelabs/rome-apps:${RHEA_TAG:-latest}
    hostname: rhea
    environment:
      SERVICE_NAME: rhea
      RHEA_CONFIG: /opt/rhea-config.yml
    volumes:
      - ./cfg/rhea-config.yml:/opt/rhea-config.yml
      - ./keys/rhea-sender.json:/opt/rhea-sender.json
      - ./keys/rhea-sender-2.json:/opt/rhea-sender-2.json
      - ./keys/rhea-sender-3.json:/opt/rhea-sender-3.json
    networks:
      - net

networks:
  net:
